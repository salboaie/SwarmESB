#! /bin/sh
### BEGIN INIT INFO
# Provides:	swarmSB
### END INIT INFO

NAME=swarmesb
RUN_AS_USER=swarmesb
RUN_AS_GROUP=swarmesb
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/bin
NODE_PATH="/path/to/node_modules"
SWARM_PATH="/path/to/SwarmESB"
export SWARM_PATH
export NODE_PATH
DAEMON=/usr/local/bin/node

CORE_ARGS=$SWARM_PATH/adaptors/Core.js
CORE_NAME=$NAME-core
CORE_DESC=$NAME-core
CORE_PIDFILE=/var/run/$CORE_NAME

LOGGER_ARGS=$SWARM_PATH/adaptors/Logger.js
LOGGER_NAME=$NAME-logger
LOGGER_DESC=$NAME-logger
LOGGER_PIDFILE=/var/run/$LOGGER_NAME

LAUNCHER_ARGS=$SWARM_PATH/adaptors/Launcher.js
LAUNCHER_NAME=$NAME-launcher
LAUNCHER_DESC=$NAME-launcher
LAUNCHER_PIDFILE=/var/run/$LAUNCHER_NAME

set -e

cd $SWARM_PATH

case "$1" in
    start)
	  echo -n "Starting $CORE_DESC: "
	  touch $CORE_PIDFILE
	  chown $RUN_AS_USER:$RUN_AS_GROUP $CORE_PIDFILE
	  if start-stop-daemon --background --make-pidfile --start --pidfile $CORE_PIDFILE --chuid $RUN_AS_USER:$RUN_AS_GROUP --exec $DAEMON -- $CORE_ARGS
	  then
		echo "$CORE_NAME started."
	  else
		echo "failed"
	  fi
	  
	  echo -n "Starting $LOGGER_DESC: "
	  touch $LOGGER_PIDFILE
	  chown $RUN_AS_USER:$RUN_AS_GROUP $LOGGER_PIDFILE
	  if start-stop-daemon --background --make-pidfile --start --pidfile $LOGGER_PIDFILE --chuid $RUN_AS_USER:$RUN_AS_GROUP --exec $DAEMON -- $LOGGER_ARGS
	  then
	        echo "$LOGGER_NAME started."
	  else
	        echo "failed"
	  fi
	  
	  echo -n "Starting $LAUNCHER_DESC: "
	  touch $LAUNCHER_PIDFILE
	  chown $RUN_AS_USER:$RUN_AS_GROUP $LAUNCHER_PIDFILE
	  if start-stop-daemon --background --make-pidfile --start --pidfile $LAUNCHER_PIDFILE --chuid $RUN_AS_USER:$RUN_AS_GROUP --exec $DAEMON -- $LAUNCHER_ARGS
	  then
	        echo "$LAUNCHER_NAME started."
	  else
	        echo "failed"
	  fi
	  ;;                                                                                                                          
    stop)
	  echo -n "Stopping $CORE_DESC: "
	  if start-stop-daemon --stop --retry forever/QUIT/1 --quiet --oknodo --pidfile $CORE_PIDFILE --exec $DAEMON
          then
                echo "$CORE_NAME stopped."
          else
                echo "failed"
          fi
	  rm -f $CORE_PIDFILE
          
          echo -n "Stopping $LOGGER_DESC: "
          if start-stop-daemon --stop --retry forever/QUIT/1 --quiet --oknodo --pidfile $LOGGER_PIDFILE --exec $DAEMON
          then
                echo "$LOGGER_NAME stopped."
          else
                echo "failed" 
          fi 
          rm -f $LOGGER_PIDFILE
          
          echo -n "Stopping $LAUNCHER_DESC: "
          LAUNCHER_PID=$(cat $LAUNCHER_PIDFILE)
          #kill childs
          pkill -9 -P $LAUNCHER_PID
          #kill process
          kill -9 $LAUNCHER_PID
          #if start-stop-daemon --stop --retry forever/QUIT/1 --quiet --oknodo --pidfile $LAUNCHER_PIDFILE --exec $DAEMON
          #then
                echo "$LAUNCHER_NAME stopped."
          #else
          #      echo "failed" 
          #fi 
          rm -f $LAUNCHER_PIDFILE
          
	  ;;
    restart)
	  ${0} stop
	  ${0} start
	  ;;
    status)
	  echo -n "$CORE_DESC is "
	  if start-stop-daemon --stop --quiet --signal 0 --pidfile $CORE_PIDFILE
	  then
		echo "running"
	  else
		echo "not running"
		#exit 1
	  fi
	  
	  echo -n "$LOGGER_DESC is "
	  if start-stop-daemon --stop --quiet --signal 0 --pidfile $LOGGER_PIDFILE
	  then
		echo "running"
	  else
		echo "not running"
		#exit 1
	  fi
	  
	  echo -n "$LAUNCHER_DESC is "
	  if start-stop-daemon --stop --quiet --signal 0 --pidfile $LAUNCHER_PIDFILE
	  then
		echo "running"
	  else
		echo "not running"
		#exit 1
	  fi
	  ;;
    *)
    	  echo "Usage: /etc/init.d/$NAME {start|stop|restart}" >&2
    	  exit 1
    	  ;;
esac

exit 0	